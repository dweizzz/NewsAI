{
  "metadata": {
    "generatedAt": "2025-03-28T04:56:14.925Z",
    "fileCount": 16,
    "baseDirectory": "/Users/akshay/Documents/Projects/NewsAI/frontend",
    "targetDirectories": [
      "src",
      "public"
    ],
    "includedExtensions": [
      ".js",
      ".jsx",
      ".ts",
      ".tsx",
      ".css",
      ".scss",
      ".sass",
      ".less",
      ".json",
      ".env",
      ".svg",
      ".png",
      ".jpg",
      ".jpeg",
      ".gif",
      ".html",
      ".md"
    ],
    "excludedDirectories": [
      "node_modules",
      "build",
      "dist",
      ".git",
      "coverage"
    ]
  },
  "files": [
    {
      "id": "22854ad2",
      "path": "src/App.css",
      "size": 10799,
      "lastModified": "2025-03-24T01:00:09.489Z",
      "content": ":root {\n  /* New aesthetic color palette */\n  --primary-color: #5b6af0;      /* Vibrant blue/purple */\n  --primary-dark: #4353d6;       /* Darker blue/purple */\n  --accent-color: #f56565;       /* Coral red for alerts and highlights */\n  --background-light: #f7f9fc;   /* Light background with slight blue tint */\n  --card-bg: #ffffff;            /* Pure white for cards */\n  --sidebar-bg: #2a2d3e;         /* Dark blue-gray for sidebar */\n  --sidebar-text: #e5e7eb;       /* Light gray for sidebar text */\n  --text-dark: #2d3748;          /* Dark blue-gray for main text */\n  --text-medium: #718096;        /* Medium gray for secondary text */\n  --text-light: #ffffff;         /* White text for dark backgrounds */\n  --border-color: #e2e8f0;       /* Light gray with blue tint for borders */\n  --hover-highlight: #edf2f7;    /* Very light blue for hover states */\n}\n\n#root {\n  max-width: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n  height: 100vh;\n  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n}\n\n.logo {\n  height: 6em;\n  padding: 1.5em;\n  will-change: filter;\n  transition: filter 300ms;\n}\n.logo:hover {\n  filter: drop-shadow(0 0 2em #646cffaa);\n}\n.logo.react:hover {\n  filter: drop-shadow(0 0 2em #61dafbaa);\n}\n\n@keyframes logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  a:nth-of-type(2) .logo {\n    animation: logo-spin infinite 20s linear;\n  }\n}\n\n.card {\n  padding: 2em;\n}\n\n.read-the-docs {\n  color: #888;\n}\n\n/* App Container - Main Layout */\n.app-container {\n  display: flex;\n  height: 100vh;\n  width: 100%;\n  overflow: hidden;\n  position: absolute;\n  left: 0;\n  top: 0;\n  right: 0;\n  bottom: 0;\n}\n\n/* Sidebar Styles */\n.sidebar {\n  width: 250px;\n  height: 100%;\n  background-color: var(--sidebar-bg);\n  border-right: 1px solid rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n  overflow-y: auto;\n  color: var(--sidebar-text);\n  display: flex;\n  flex-direction: column;\n  box-shadow: 2px 0 10px rgba(0, 0, 0, 0.05);\n}\n\n.sidebar.closed {\n  width: 50px;\n}\n\n.sidebar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.25rem 1rem;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  background-color: var(--primary-dark);\n}\n\n.sidebar-header h2 {\n  margin: 0;\n  font-weight: 600;\n  font-size: 1.1rem;\n  letter-spacing: 0.5px;\n}\n\n.sidebar.closed .sidebar-header h2 {\n  display: none;\n}\n\n.toggle-sidebar-button {\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.2rem;\n  color: var(--sidebar-text);\n  padding: 0.2rem 0.5rem;\n  border-radius: 4px;\n  transition: all 0.2s;\n}\n\n.toggle-sidebar-button:hover {\n  background-color: rgba(255, 255, 255, 0.15);\n  transform: scale(1.1);\n}\n\n.saved-searches-list {\n  padding: 1rem;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 0.75rem;\n  overflow-y: auto;\n}\n\n.sidebar.closed .saved-searches-list {\n  display: none;\n}\n\n/* Sidebar Search Form - Updated to ensure containment */\n.sidebar-search-form {\n  padding: 1rem;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n  background-color: rgba(0, 0, 0, 0.15);\n  position: sticky;\n  bottom: 0;\n  width: 100%;\n  box-sizing: border-box;\n  margin: 0;\n  display: flex;\n  justify-content: center;\n}\n\n.sidebar.closed .sidebar-search-form {\n  display: none;\n}\n\n.sidebar-search-input {\n  width: 90%;\n  padding: 0.75rem;\n  background-color: rgba(255, 255, 255, 0.08);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n  border-radius: 6px;\n  color: var(--sidebar-text);\n  font-size: 0.95rem;\n  outline: none;\n  transition: all 0.2s;\n  box-sizing: border-box;\n}\n\n.sidebar-search-input::placeholder {\n  color: rgba(255, 255, 255, 0.4);\n}\n\n.sidebar-search-input:focus {\n  background-color: rgba(255, 255, 255, 0.12);\n  border-color: rgba(255, 255, 255, 0.2);\n  box-shadow: 0 0 0 2px rgba(91, 106, 240, 0.25);\n}\n\n.no-saved-searches {\n  color: rgba(255, 255, 255, 0.5);\n  font-style: italic;\n  text-align: center;\n  padding: 1rem 0;\n}\n\n.saved-search-item {\n  padding: 0.75rem 1rem;\n  border-radius: 6px;\n  background-color: rgba(255, 255, 255, 0.08);\n  color: var(--sidebar-text);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n  transition: all 0.2s;\n  text-align: left;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\n}\n\n.saved-search-item:hover {\n  background-color: rgba(255, 255, 255, 0.15);\n  transform: translateY(-1px);\n}\n\n.remove-search-button {\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1.2rem;\n  color: rgba(255, 255, 255, 0.6);\n  padding: 0 0.5rem;\n  transition: all 0.2s;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 24px;\n  width: 24px;\n}\n\n.remove-search-button:hover {\n  color: var(--accent-color);\n  background-color: rgba(0, 0, 0, 0.2);\n}\n\n/* Main Content Styles */\n.main-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow: hidden;\n  background-color: var(--background-light);\n}\n\n/* Header Styles */\n.header-container {\n  padding: 1rem 2rem;\n  background-color: var(--primary-color);\n  background-image: linear-gradient(to right, var(--primary-color), var(--primary-dark));\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  z-index: 10;\n}\n\n.header-container h1 {\n  color: var(--text-light);\n  margin: 0.5rem 0;\n  font-weight: 700;\n  letter-spacing: 0.5px;\n  font-size: 1.75rem;\n}\n\n/* Scrollable Content */\n.scrollable-content {\n  flex: 1;\n  overflow-y: auto;\n  padding: 1.75rem 2.5rem 2.5rem;\n  background-color: var(--background-light);\n}\n\n.loading {\n  padding: 2rem;\n  text-align: center;\n  color: var(--text-medium);\n  font-style: italic;\n}\n\n.no-results {\n  padding: 2rem;\n  text-align: center;\n  color: var(--text-medium);\n  font-style: italic;\n  background-color: var(--card-bg);\n  border-radius: 10px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.03);\n}\n\n.no-active-tab {\n  padding: 3rem;\n  text-align: center;\n  color: var(--text-medium);\n  font-size: 1.2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 50%;\n}\n\n.no-active-tab p {\n  margin-top: 1rem;\n}\n\n.tab-content {\n  animation: fadeIn 0.3s ease-in-out;\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\nh1 {\n  text-align: center;\n  color: var(--text-dark);\n  margin-bottom: 2rem;\n}\n\n/* Tabs System */\n.tabs-container {\n  margin-bottom: 2rem;\n  background-color: var(--card-bg);\n  border-radius: 10px;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.04);\n  overflow: hidden;\n}\n\n.tabs-header {\n  display: flex;\n  overflow-x: auto;\n  border-bottom: 1px solid var(--border-color);\n  background-color: var(--background-light);\n  scrollbar-width: thin;\n}\n\n.tabs-header::-webkit-scrollbar {\n  height: 3px;\n}\n\n.tabs-header::-webkit-scrollbar-thumb {\n  background-color: var(--primary-color);\n  border-radius: 3px;\n}\n\n.tab {\n  padding: 0.85rem 1.25rem;\n  font-size: 0.95rem;\n  font-weight: 600;\n  color: var(--text-medium);\n  background-color: transparent;\n  border: none;\n  border-bottom: 3px solid transparent;\n  cursor: pointer;\n  transition: all 0.2s;\n  white-space: nowrap;\n}\n\n.tab:hover {\n  color: var(--primary-color);\n}\n\n.tab.active {\n  color: var(--primary-color);\n  border-bottom-color: var(--primary-color);\n  background-color: rgba(91, 106, 240, 0.05);\n}\n\n.tab-close {\n  margin-left: 0.5rem;\n  font-size: 0.8rem;\n  opacity: 0.5;\n  transition: all 0.2s;\n}\n\n.tab:hover .tab-close {\n  opacity: 1;\n}\n\n/* Hide original search form */\n.search-form {\n  display: none;\n}\n\n.search-button {\n  padding: 0.85rem 1.75rem;\n  font-size: 1rem;\n  font-weight: 600;\n  color: var(--text-light);\n  background-color: var(--primary-color);\n  border: none;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: all 0.2s;\n  box-shadow: 0 2px 5px rgba(91, 106, 240, 0.25);\n}\n\n.search-button:hover {\n  background-color: var(--primary-dark);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 8px rgba(91, 106, 240, 0.3);\n}\n\n.search-button:active {\n  transform: translateY(0);\n}\n\n.search-button:disabled {\n  background-color: var(--text-medium);\n  opacity: 0.7;\n  cursor: not-allowed;\n  box-shadow: none;\n}\n\n.error {\n  color: var(--accent-color);\n  padding: 1.25rem;\n  margin-bottom: 1.5rem;\n  background-color: rgba(245, 101, 101, 0.08);\n  border-radius: 8px;\n  border-left: 4px solid var(--accent-color);\n  font-weight: 500;\n}\n\n.insights-container {\n  display: flex;\n  flex-direction: column;\n  gap: 1.25rem;\n}\n\n.insight-card {\n  padding: 1.75rem;\n  background-color: var(--card-bg);\n  border-radius: 10px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.03);\n  transition: all 0.3s;\n  border-left: 4px solid var(--primary-color);\n}\n\n.insight-card:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);\n}\n\n.insight-text {\n  font-size: 1.1rem;\n  color: var(--text-dark);\n  margin-bottom: 1.25rem;\n  line-height: 1.6;\n}\n\n.source-info {\n  font-size: 0.95rem;\n  color: var(--text-medium);\n  padding-top: 0.75rem;\n  border-top: 1px solid var(--border-color);\n}\n\n.source-info a {\n  color: var(--primary-color);\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.2s;\n}\n\n.source-info a:hover {\n  color: var(--primary-dark);\n  text-decoration: underline;\n}\n\n/* Responsive Styles */\n@media (max-width: 768px) {\n  .app-container {\n    flex-direction: column;\n  }\n\n  .sidebar {\n    width: 100%;\n    height: auto;\n    max-height: 250px;\n    border-right: none;\n    border-bottom: 1px solid var(--border-color);\n  }\n\n  .sidebar.closed {\n    height: 50px;\n    width: 100%;\n  }\n\n  .main-content {\n    padding: 0;\n  }\n\n  .scrollable-content {\n    padding: 1.5rem 1.25rem;\n  }\n\n  .search-form {\n    flex-direction: column;\n    padding: 1rem;\n  }\n\n  .insight-card {\n    padding: 1.25rem;\n  }\n}\n\n/* Header with logout button */\n.header-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 2rem;\n  background-color: var(--primary-color);\n  background-image: linear-gradient(to right, var(--primary-color), var(--primary-dark));\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  z-index: 10;\n}\n\n.logout-button {\n  background-color: transparent;\n  color: var(--text-light);\n  border: 1px solid rgba(255, 255, 255, 0.3);\n  border-radius: 4px;\n  padding: 0.5rem 1rem;\n  font-size: 0.9rem;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.logout-button:hover {\n  background-color: rgba(255, 255, 255, 0.1);\n  border-color: rgba(255, 255, 255, 0.5);\n}\n\n/* Responsive adjustments for login and register */\n@media (max-width: 500px) {\n  .login-card {\n    padding: 1.5rem;\n    width: 90%;\n  }\n\n  .form-group input {\n    padding: 0.6rem;\n  }\n\n  .login-button {\n    padding: 0.7rem;\n  }\n}"
    },
    {
      "id": "8fbe8bcd",
      "path": "src/App.tsx",
      "size": 12787,
      "lastModified": "2025-03-28T04:51:34.648Z",
      "content": "import { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'\nimport { getInsights, Insight, fetchSavedSearches, saveSearchTerm, deleteSearchTerm } from './services/api'\nimport { authEvents } from './services/authEvents'\nimport Login from './components/Login'\nimport Register from './components/Register'\nimport SearchForm from './components/SearchForm'\nimport './App.css'\n\n// Define the saved search term type from API\ninterface SavedSearchTerm {\n  _id: string;\n  term: string;\n  user_id: string;\n  created_at: string;\n}\n\n// Define a Tab type to manage our tabs system\ninterface Tab {\n  id: string;\n  searchTerm: string;\n  insights: Insight[];\n  loading: boolean;\n  error: string | null;\n}\n\nfunction App() {\n  // Change the type to SavedSearchTerm[] to match the API response\n  const [savedSearches, setSavedSearches] = useState<SavedSearchTerm[]>([])\n  const [sidebarOpen, setSidebarOpen] = useState(true)\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n\n  // New state for managing tabs\n  const [tabs, setTabs] = useState<Tab[]>([])\n  const [activeTabId, setActiveTabId] = useState<string | null>(null)\n  const [isLoadingSavedSearches, setIsLoadingSavedSearches] = useState(false)\n\n  // Add a flag to track when a search save is in progress\n  const [isSavingSearch, setIsSavingSearch] = useState(false)\n\n  // Check if user is already authenticated\n  useEffect(() => {\n    const token = localStorage.getItem('token')\n    if (token) {\n      setIsAuthenticated(prevState => {\n        if (!prevState) return true;\n        return prevState;\n      });\n    }\n\n    // Listen for authentication events\n    const unsubscribeLogin = authEvents.onLogin(() => {\n      console.log('Auth event: login');\n      setIsAuthenticated(prevState => {\n        if (!prevState) return true;\n        return prevState;\n      });\n    });\n\n    const unsubscribeLogout = authEvents.onLogout(() => {\n      console.log('Auth event: logout');\n      setIsAuthenticated(prevState => {\n        if (prevState) return false;\n        return prevState;\n      });\n    });\n\n    // Cleanup event listeners\n    return () => {\n      unsubscribeLogin();\n      unsubscribeLogout();\n    };\n  }, [])\n\n  // For debugging - log auth state changes\n  useEffect(() => {\n    console.log('Authentication state changed:', isAuthenticated);\n  }, [isAuthenticated]);\n\n  // Load saved searches from API when authenticated\n  useEffect(() => {\n    if (isAuthenticated) {\n      loadSavedSearches();\n    }\n  }, [isAuthenticated])\n\n  // Function to load saved searches from the API\n  const loadSavedSearches = async () => {\n    if (!isAuthenticated) return;\n\n    setIsLoadingSavedSearches(true);\n    try {\n      const searches = await fetchSavedSearches();\n      setSavedSearches(searches);\n    } catch (error) {\n      console.error('Failed to load saved searches:', error);\n    } finally {\n      setIsLoadingSavedSearches(false);\n    }\n  };\n\n  // Function to generate a unique ID for tabs\n  const generateTabId = () => {\n    return Date.now().toString()\n  }\n\n  // Get the active tab\n  const getActiveTab = () => {\n    return tabs.find(tab => tab.id === activeTabId) || null\n  }\n\n  const handleLogout = () => {\n    // Clear auth state\n    setIsAuthenticated(false)\n    // Remove token\n    localStorage.removeItem('token')\n    // Emit logout event\n    authEvents.emitLogout()\n    // Clear user data\n    setSavedSearches([])\n    setTabs([])\n    setActiveTabId(null)\n  }\n\n  const handleSavedSearchClick = async (search: SavedSearchTerm) => {\n    // Check if we already have a tab with this search term\n    const existingTab = tabs.find(tab => tab.searchTerm === search.term)\n\n    if (existingTab) {\n      // If tab exists, just activate it\n      setActiveTabId(existingTab.id)\n      return\n    }\n\n    // Otherwise create a new tab for this saved search\n    const newTabId = generateTabId()\n    const newTab: Tab = {\n      id: newTabId,\n      searchTerm: search.term,\n      insights: [],\n      loading: true,\n      error: null\n    }\n\n    // Add new tab and set it as active\n    setTabs([...tabs, newTab])\n    setActiveTabId(newTabId)\n\n    // Fetch results\n    try {\n      const results = await getInsights(search.term)\n\n      // Update the tab with results\n      setTabs(prevTabs =>\n        prevTabs.map(tab =>\n          tab.id === newTabId\n            ? { ...tab, insights: results, loading: false }\n            : tab\n        )\n      )\n    } catch (err) {\n      // Update the tab with error\n      setTabs(prevTabs =>\n        prevTabs.map(tab =>\n          tab.id === newTabId\n            ? { ...tab, error: 'Failed to fetch insights. Please try again.', loading: false }\n            : tab\n        )\n      )\n      console.error(err)\n    }\n  }\n\n  const handleRemoveSavedSearch = async (search: SavedSearchTerm, e: React.MouseEvent) => {\n    e.stopPropagation() // Prevent triggering the parent click handler\n\n    try {\n      await deleteSearchTerm(search._id);\n      // Remove from local state after successful API call\n      setSavedSearches(savedSearches.filter(s => s._id !== search._id));\n    } catch (error) {\n      console.error('Failed to delete search term:', error);\n    }\n  }\n\n  const toggleSidebar = () => {\n    setSidebarOpen(!sidebarOpen)\n  }\n\n  const handleTabClick = (tabId: string) => {\n    setActiveTabId(tabId)\n  }\n\n  const handleCloseTab = (tabId: string, e: React.MouseEvent) => {\n    e.stopPropagation() // Prevent tab activation when closing\n\n    // Remove the tab\n    const newTabs = tabs.filter(tab => tab.id !== tabId)\n    setTabs(newTabs)\n\n    // If we're closing the active tab, activate another tab if available\n    if (tabId === activeTabId && newTabs.length > 0) {\n      setActiveTabId(newTabs[newTabs.length - 1].id)\n    } else if (newTabs.length === 0) {\n      setActiveTabId(null)\n    }\n  }\n\n  // Get the currently active tab\n  const activeTab = getActiveTab()\n\n  // Main application UI component\n  const MainApp = () => (\n    <div className=\"app-container\">\n      <div className={`sidebar ${sidebarOpen ? 'open' : 'closed'}`}>\n        <div className=\"sidebar-header\">\n          <h2>Saved Searches</h2>\n          <button\n            className=\"toggle-sidebar-button\"\n            onClick={toggleSidebar}\n            aria-label={sidebarOpen ? \"Close sidebar\" : \"Open sidebar\"}\n          >\n            {sidebarOpen ? '←' : '→'}\n          </button>\n        </div>\n\n        <div className=\"saved-searches-list\">\n          {isLoadingSavedSearches ? (\n            <p className=\"loading-searches\">Loading saved searches...</p>\n          ) : savedSearches.length === 0 ? (\n            <p className=\"no-saved-searches\">No saved searches yet</p>\n          ) : (\n            savedSearches.map((search) => (\n              <div\n                key={search._id}\n                className=\"saved-search-item\"\n                onClick={() => handleSavedSearchClick(search)}\n              >\n                <span>{search.term}</span>\n                <button\n                  className=\"remove-search-button\"\n                  onClick={(e) => handleRemoveSavedSearch(search, e)}\n                  aria-label={`Remove ${search.term} from saved searches`}\n                >\n                  ×\n                </button>\n              </div>\n            ))\n          )}\n        </div>\n\n        <SearchForm\n          onSearch={async (searchTerm) => {\n            // Create a new tab with this search term\n            const newTabId = generateTabId();\n            const newTab: Tab = {\n              id: newTabId,\n              searchTerm: searchTerm,\n              insights: [],\n              loading: true,\n              error: null\n            };\n\n            // Add new tab and set it as active\n            setTabs([...tabs, newTab]);\n            setActiveTabId(newTabId);\n\n            // Save this search term to the backend if user is authenticated\n            // Check if we're not already in the process of saving a search term\n            if (!isSavingSearch && isAuthenticated) {\n              try {\n                // Set the flag to prevent duplicate saves\n                setIsSavingSearch(true);\n\n                // Check if this term is already saved - use functional update to ensure latest state\n                const existingSearch = savedSearches.find(s => s.term === searchTerm);\n\n                if (!existingSearch) {\n                  const newSearch = await saveSearchTerm(searchTerm);\n                  setSavedSearches(prevSearches => [...prevSearches, newSearch]);\n                }\n              } catch (error) {\n                console.error('Failed to save search term:', error);\n              } finally {\n                // Reset the flag regardless of success or failure\n                setIsSavingSearch(false);\n              }\n            }\n\n            // Fetch results\n            getInsights(newTab.searchTerm)\n              .then(results => {\n                // Update the tab with results\n                setTabs(prevTabs =>\n                  prevTabs.map(tab =>\n                    tab.id === newTabId\n                      ? { ...tab, insights: results, loading: false }\n                      : tab\n                  )\n                );\n              })\n              .catch(err => {\n                // Update the tab with error\n                setTabs(prevTabs =>\n                  prevTabs.map(tab =>\n                    tab.id === newTabId\n                      ? { ...tab, error: 'Failed to fetch insights. Please try again.', loading: false }\n                      : tab\n                  )\n                );\n                console.error(err);\n              });\n          }}\n        />\n      </div>\n\n      <div className=\"main-content\">\n        <div className=\"header-container\">\n          <h1>News AI Insights</h1>\n          <button className=\"logout-button\" onClick={handleLogout}>\n            Log Out\n          </button>\n        </div>\n\n        <div className=\"scrollable-content\">\n          {/* Tab navigation system */}\n          {tabs.length > 0 && (\n            <div className=\"tabs-container\">\n              <div className=\"tabs-header\">\n                {tabs.map(tab => (\n                  <button\n                    key={tab.id}\n                    className={`tab ${activeTabId === tab.id ? 'active' : ''}`}\n                    onClick={() => handleTabClick(tab.id)}\n                  >\n                    {tab.searchTerm}\n                    <span\n                      className=\"tab-close\"\n                      onClick={(e) => handleCloseTab(tab.id, e)}\n                    >\n                      ×\n                    </span>\n                  </button>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Display the active tab's content */}\n          {activeTab ? (\n            <div className=\"tab-content\">\n              {activeTab.loading ? (\n                <div className=\"loading\">Loading insights for \"{activeTab.searchTerm}\"...</div>\n              ) : activeTab.error ? (\n                <div className=\"error\">{activeTab.error}</div>\n              ) : (\n                <div className=\"insights-container\">\n                  {activeTab.insights.length === 0 ? (\n                    <div className=\"no-results\">\n                      No insights found for \"{activeTab.searchTerm}\"\n                    </div>\n                  ) : (\n                    activeTab.insights.map((insight, index) => (\n                      <div key={index} className=\"insight-card\">\n                        <p className=\"insight-text\">{insight.insight}</p>\n                        <div className=\"source-info\">\n                          <a href={insight.source_link} target=\"_blank\" rel=\"noopener noreferrer\">\n                            {insight.source_title}\n                          </a>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"no-active-tab\">\n              <p>Search for a topic using the sidebar to see insights</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <Router>\n      <div className=\"app-root\">\n        <Routes>\n          <Route path=\"/login\" element={\n            isAuthenticated ? <Navigate to=\"/\" replace /> : <Login />\n          } />\n          <Route path=\"/register\" element={\n            isAuthenticated ? <Navigate to=\"/\" replace /> : <Register />\n          } />\n          <Route path=\"/\" element={\n            isAuthenticated ? <MainApp /> : <Navigate to=\"/login\" replace />\n          } />\n          <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"
    },
    {
      "id": "a7909288",
      "path": "src/AuthContext.tsx",
      "size": 1420,
      "lastModified": "2025-03-24T01:00:09.489Z",
      "content": "import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\n\ninterface AuthContextType {\n  isAuthenticated: boolean;\n  token: string | null;\n  login: (token: string) => void;\n  logout: () => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [token, setToken] = useState<string | null>(null);\n\n  // Check for existing token on mount\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      setToken(storedToken);\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  const login = (newToken: string) => {\n    localStorage.setItem('token', newToken);\n    setToken(newToken);\n    setIsAuthenticated(true);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setIsAuthenticated(false);\n  };\n\n  const value = {\n    isAuthenticated,\n    token,\n    login,\n    logout\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"
    },
    {
      "id": "d04874e7",
      "path": "src/assets/react.svg",
      "size": 4126,
      "lastModified": "2025-03-23T23:18:28.962Z",
      "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" class=\"iconify iconify--logos\" width=\"35.93\" height=\"32\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 256 228\"><path fill=\"#00D8FF\" d=\"M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z\"></path></svg>"
    },
    {
      "id": "cc1aa87f",
      "path": "src/authService.ts",
      "size": 1322,
      "lastModified": "2025-03-24T01:00:09.490Z",
      "content": "// src/services/authService.ts\nimport { useAuth } from '../contexts/AuthContext';\n\n// Types\nexport interface LoginData {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterData {\n  email: string;\n  username: string;\n  password: string;\n}\n\nexport interface TokenResponse {\n  access_token: string;\n  token_type: string;\n}\n\n// For login using OAuth2 password flow\nexport const loginUser = async (data: LoginData): Promise<TokenResponse> => {\n  const formData = new FormData();\n  formData.append('username', data.email); // FastAPI OAuth2 expects 'username' field\n  formData.append('password', data.password);\n\n  const response = await fetch('/auth/login', {\n    method: 'POST',\n    body: formData,\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.detail || 'Login failed');\n  }\n\n  return response.json();\n};\n\n// For user registration\nexport const registerUser = async (data: RegisterData): Promise<TokenResponse> => {\n  const response = await fetch('/auth/register', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(data),\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.detail || 'Registration failed');\n  }\n\n  return response.json();\n};"
    },
    {
      "id": "af065f04",
      "path": "src/components/Login.css",
      "size": 2687,
      "lastModified": "2025-03-24T01:00:09.490Z",
      "content": ".login-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  background-color: var(--background-light);\n}\n\n.login-card {\n  width: 100%;\n  max-width: 400px;\n  padding: 2.5rem;\n  background-color: var(--card-bg);\n  border-radius: 10px;\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);\n  animation: fadeIn 0.4s ease-in-out;\n}\n\n.login-card h2 {\n  margin-top: 0;\n  margin-bottom: 1.5rem;\n  color: var(--text-dark);\n  font-weight: 700;\n  text-align: center;\n  font-size: 1.5rem;\n}\n\n.form-group {\n  margin-bottom: 1.5rem;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n  color: var(--text-dark);\n  font-weight: 500;\n  font-size: 0.95rem;\n  text-align: left;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid var(--border-color);\n  border-radius: 6px;\n  font-size: 1rem;\n  transition: all 0.2s;\n  box-sizing: border-box;\n}\n\n.form-group input:focus {\n  border-color: var(--primary-color);\n  outline: none;\n  box-shadow: 0 0 0 2px rgba(91, 106, 240, 0.2);\n}\n\n.form-group input::placeholder {\n  color: var(--text-medium);\n  opacity: 0.6;\n}\n\n.login-button {\n  width: 100%;\n  padding: 0.85rem;\n  margin-top: 0.5rem;\n  background-color: var(--primary-color);\n  color: var(--text-light);\n  border: none;\n  border-radius: 6px;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  box-shadow: 0 2px 5px rgba(91, 106, 240, 0.25);\n}\n\n.login-button:hover {\n  background-color: var(--primary-dark);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(91, 106, 240, 0.3);\n}\n\n.login-button:active {\n  transform: translateY(0);\n  box-shadow: 0 2px 3px rgba(91, 106, 240, 0.2);\n}\n\n.login-button:disabled {\n  background-color: var(--text-medium);\n  opacity: 0.7;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n}\n\n.login-error {\n  padding: 0.75rem;\n  margin-bottom: 1.5rem;\n  background-color: rgba(245, 101, 101, 0.08);\n  border-left: 4px solid var(--accent-color);\n  color: var(--accent-color);\n  font-size: 0.9rem;\n  text-align: left;\n  border-radius: 4px;\n}\n\n.login-footer {\n  margin-top: 2rem;\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.login-footer p {\n  margin-bottom: 0.5rem;\n  color: var(--text-medium);\n  font-size: 0.95rem;\n}\n\n.register-link {\n  background: none;\n  border: none;\n  color: var(--primary-color);\n  font-weight: 600;\n  cursor: pointer;\n  font-size: 0.95rem;\n  text-decoration: underline;\n  transition: color 0.2s;\n}\n\n.register-link:hover {\n  color: var(--primary-dark);\n}\n\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n}"
    },
    {
      "id": "af4a9ece",
      "path": "src/components/Login.tsx",
      "size": 3687,
      "lastModified": "2025-03-24T02:54:10.015Z",
      "content": "import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authEvents } from '../services/authEvents';\nimport './Login.css';\n\n// Backend API base URL\nconst API_BASE_URL = 'http://localhost:8000';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      setError('Please enter both email and password');\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n\n    try {\n      // Create form data for OAuth2 password flow\n      const formData = new FormData();\n      formData.append('username', email); // FastAPI OAuth2 expects 'username' field\n      formData.append('password', password);\n\n      console.log(\"Attempting login with:\", {\n        email,\n        password: \"[REDACTED]\" // Don't log actual password\n      });\n\n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\n        method: 'POST',\n        body: formData,\n        credentials: 'include', // Include cookies if needed\n      });\n\n      // Log response for debugging\n      console.log(\"Login response status:\", response.status);\n\n      const data = await response.json();\n      console.log(\"Login response data:\", data);\n\n      if (!response.ok) {\n        // Handle specific error cases\n        if (data.detail === \"Incorrect email or password\") {\n          setError('Invalid email or password');\n        } else {\n          setError(data.detail || 'Login failed');\n        }\n        return;\n      }\n\n      // Store token\n      localStorage.setItem('token', data.access_token);\n\n      // Emit login event to notify App component\n      authEvents.emitLogin();\n\n      // Redirect to main page\n      navigate('/');\n    } catch (err) {\n      console.error(\"Login error:\", err);\n      setError('An error occurred during login. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleRegisterClick = () => {\n    navigate('/register');\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-card\">\n        <h2>Log in to News AI</h2>\n        {error && <div className=\"login-error\">{error}</div>}\n\n        <form onSubmit={handleLogin}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Enter your email\"\n              disabled={isLoading}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Enter your password\"\n              disabled={isLoading}\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"login-button\"\n            disabled={isLoading}\n          >\n            {isLoading ? 'Logging in...' : 'Log In'}\n          </button>\n        </form>\n\n        <div className=\"login-footer\">\n          <p>Don't have an account?</p>\n          <button\n            className=\"register-link\"\n            onClick={handleRegisterClick}\n            disabled={isLoading}\n          >\n            Register\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;"
    },
    {
      "id": "2ef5bd29",
      "path": "src/components/Register.tsx",
      "size": 4900,
      "lastModified": "2025-03-24T02:53:59.011Z",
      "content": "import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { authEvents } from '../services/authEvents';\nimport './Login.css'; // Reuse the same CSS\n\n// Backend API base URL\nconst API_BASE_URL = 'http://localhost:8000';\n\nfunction Register() {\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleRegister = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!email || !username || !password) {\n      setError('Please fill in all fields');\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setError('Passwords do not match');\n      return;\n    }\n\n    setIsLoading(true);\n    setError('');\n\n    try {\n      console.log(\"Attempting registration with:\", {\n        email,\n        username,\n        password: \"[REDACTED]\" // Don't log actual password\n      });\n\n      const response = await fetch(`${API_BASE_URL}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          username,\n          password,\n        }),\n        credentials: 'include', // Include cookies if needed\n      });\n\n      // Log response for debugging\n      console.log(\"Registration response status:\", response.status);\n\n      const data = await response.json();\n      console.log(\"Registration response data:\", data);\n\n      if (!response.ok) {\n        // Handle specific error messages\n        if (data.detail === \"Email already registered\") {\n          setError('This email is already registered');\n        } else if (data.detail === \"Username already taken\") {\n          setError('This username is already taken');\n        } else {\n          setError(data.detail || 'Registration failed');\n        }\n        return;\n      }\n\n      // Registration successful, store token and redirect\n      localStorage.setItem('token', data.access_token);\n\n      // Emit login event to notify App component\n      authEvents.emitLogin();\n\n      // Redirect to main app\n      navigate('/');\n    } catch (err) {\n      console.error(\"Registration error:\", err);\n      setError('An error occurred during registration. Please try again.');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleLoginClick = () => {\n    navigate('/login');\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-card\">\n        <h2>Create an Account</h2>\n        {error && <div className=\"login-error\">{error}</div>}\n\n        <form onSubmit={handleRegister}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Enter your email\"\n              disabled={isLoading}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              id=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              placeholder=\"Choose a username\"\n              disabled={isLoading}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Create a password\"\n              disabled={isLoading}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              placeholder=\"Confirm your password\"\n              disabled={isLoading}\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"login-button\"\n            disabled={isLoading}\n          >\n            {isLoading ? 'Creating Account...' : 'Register'}\n          </button>\n        </form>\n\n        <div className=\"login-footer\">\n          <p>Already have an account?</p>\n          <button\n            className=\"register-link\"\n            onClick={handleLoginClick}\n            disabled={isLoading}\n          >\n            Log In\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Register;"
    },
    {
      "id": "78badac9",
      "path": "src/components/SearchForm.tsx",
      "size": 1407,
      "lastModified": "2025-03-24T03:11:15.669Z",
      "content": "// Create a new file called SearchForm.tsx\nimport React, { useState, useRef, memo } from 'react';\n\ninterface SearchFormProps {\n  onSearch: (searchTerm: string) => void;\n}\n\n// This component will maintain its own state and not re-render when parent re-renders\nconst SearchForm: React.FC<SearchFormProps> = memo(({ onSearch }) => {\n  const [inputValue, setInputValue] = useState('');\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!inputValue.trim()) return;\n    \n    onSearch(inputValue);\n    setInputValue('');\n    \n    // Focus back on input after submission\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n\n  return (\n    <form \n      onSubmit={handleSubmit} \n      className=\"sidebar-search-form\"\n    >\n      <input\n        ref={inputRef}\n        type=\"text\"\n        value={inputValue}\n        onChange={(e) => setInputValue(e.target.value)}\n        placeholder=\"Search for insights...\"\n        className=\"sidebar-search-input\"\n      />\n      <button type=\"submit\" className=\"search-button\">\n        Search\n      </button>\n    </form>\n  );\n});\n\nexport default SearchForm;\n\n// In your main App.tsx, replace the form with:\n// <SearchForm onSearch={(term) => {\n//   // Create a new tab here with the term\n//   const newTabId = generateTabId();\n//   // Rest of your search handling logic...\n// }} />"
    },
    {
      "id": "8d501c1d",
      "path": "src/components/SearchInput.tsx",
      "size": 771,
      "lastModified": "2025-03-24T02:51:46.861Z",
      "content": "import React, { useState } from 'react';\n\ninterface SearchInputProps {\n  onSearch: (term: string) => void;\n}\n\nconst SearchInput: React.FC<SearchInputProps> = ({ onSearch }) => {\n  const [localInputValue, setLocalInputValue] = useState('');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (localInputValue.trim()) {\n      onSearch(localInputValue);\n      setLocalInputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"sidebar-search-form\">\n      <input\n        type=\"text\"\n        value={localInputValue}\n        onChange={(e) => setLocalInputValue(e.target.value)}\n        placeholder=\"Search for insights...\"\n        className=\"sidebar-search-input\"\n      />\n    </form>\n  );\n};\n\nexport default SearchInput; "
    },
    {
      "id": "619dde9e",
      "path": "src/index.css",
      "size": 1154,
      "lastModified": "2025-03-23T23:18:28.962Z",
      "content": ":root {\n  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;\n  line-height: 1.5;\n  font-weight: 400;\n\n  color-scheme: light dark;\n  color: rgba(255, 255, 255, 0.87);\n  background-color: #242424;\n\n  font-synthesis: none;\n  text-rendering: optimizeLegibility;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\na {\n  font-weight: 500;\n  color: #646cff;\n  text-decoration: inherit;\n}\na:hover {\n  color: #535bf2;\n}\n\nbody {\n  margin: 0;\n  display: flex;\n  place-items: center;\n  min-width: 320px;\n  min-height: 100vh;\n}\n\nh1 {\n  font-size: 3.2em;\n  line-height: 1.1;\n}\n\nbutton {\n  border-radius: 8px;\n  border: 1px solid transparent;\n  padding: 0.6em 1.2em;\n  font-size: 1em;\n  font-weight: 500;\n  font-family: inherit;\n  background-color: #1a1a1a;\n  cursor: pointer;\n  transition: border-color 0.25s;\n}\nbutton:hover {\n  border-color: #646cff;\n}\nbutton:focus,\nbutton:focus-visible {\n  outline: 4px auto -webkit-focus-ring-color;\n}\n\n@media (prefers-color-scheme: light) {\n  :root {\n    color: #213547;\n    background-color: #ffffff;\n  }\n  a:hover {\n    color: #747bff;\n  }\n  button {\n    background-color: #f9f9f9;\n  }\n}\n"
    },
    {
      "id": "59d33d24",
      "path": "src/main.tsx",
      "size": 231,
      "lastModified": "2025-03-24T01:00:09.490Z",
      "content": "import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)"
    },
    {
      "id": "d8915442",
      "path": "src/services/api.ts",
      "size": 3282,
      "lastModified": "2025-03-28T04:51:34.649Z",
      "content": "// services/api.ts\n\nconst API_URL = 'http://localhost:8000';\n\nexport interface Insight {\n  insight: string;\n  source_title: string;\n  source_link: string;\n}\n\nexport interface SavedSearchTerm {\n  _id: string;\n  term: string;\n  user_id: string;\n  created_at: string;\n}\n\n// Helper function for API requests with authentication\nconst fetchWithAuth = async (url: string, options: RequestInit = {}) => {\n  const token = localStorage.getItem('token');\n\n  if (!token) {\n    throw new Error('Authentication required');\n  }\n\n  const headers = {\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`,\n    ...options.headers\n  };\n\n  const response = await fetch(url, {\n    ...options,\n    headers\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}));\n    throw new Error(errorData.detail || `API request failed with status ${response.status}`);\n  }\n\n  return response.json();\n};\n\n// Get insights for a search term\nexport const getInsights = async (searchTerm: string, numResults: number = 5): Promise<Insight[]> => {\n  const token = localStorage.getItem('token');\n  const headers: HeadersInit = {\n    'Content-Type': 'application/json'\n  };\n\n  // Add auth token if available\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  const response = await fetch(`${API_URL}/api/insights`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      search_term: searchTerm,\n      num_results: numResults\n    })\n  });\n\n  if (!response.ok) {\n    throw new Error(`Failed to get insights: ${response.statusText}`);\n  }\n\n  return response.json();\n};\n\n// Fetch saved search terms from the API\nexport const fetchSavedSearches = async (): Promise<SavedSearchTerm[]> => {\n  return fetchWithAuth(`${API_URL}/search-terms/`);\n};\n\n// Save a new search term\nexport const saveSearchTerm = async (term: string): Promise<SavedSearchTerm> => {\n  return fetchWithAuth(`${API_URL}/search-terms/`, {\n    method: 'POST',\n    body: JSON.stringify({ term })\n  });\n};\n\n// Delete a search term\nexport const deleteSearchTerm = async (searchTermId: string): Promise<void> => {\n  await fetchWithAuth(`${API_URL}/search-terms/${searchTermId}`, {\n    method: 'DELETE'\n  });\n};\n\n// Authentication functions\nexport const loginUser = async (email: string, password: string) => {\n  const formData = new URLSearchParams();\n  formData.append('username', email);\n  formData.append('password', password);\n\n  const response = await fetch(`${API_URL}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: formData\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}));\n    throw new Error(errorData.detail || 'Login failed');\n  }\n\n  return response.json();\n};\n\nexport const registerUser = async (email: string, username: string, password: string) => {\n  const response = await fetch(`${API_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, username, password })\n  });\n\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({}));\n    throw new Error(errorData.detail || 'Registration failed');\n  }\n\n  return response.json();\n};"
    },
    {
      "id": "34772c00",
      "path": "src/services/authEvents.ts",
      "size": 819,
      "lastModified": "2025-03-24T01:00:09.491Z",
      "content": "// Create a custom event system for authentication\nconst AUTH_LOGIN_EVENT = 'auth:login';\nconst AUTH_LOGOUT_EVENT = 'auth:logout';\n\nexport const authEvents = {\n  // Notify the app that user logged in\n  emitLogin: () => {\n    window.dispatchEvent(new Event(AUTH_LOGIN_EVENT));\n  },\n\n  // Notify the app that user logged out\n  emitLogout: () => {\n    window.dispatchEvent(new Event(AUTH_LOGOUT_EVENT));\n  },\n\n  // Listen for login events\n  onLogin: (callback: () => void) => {\n    window.addEventListener(AUTH_LOGIN_EVENT, callback);\n    return () => window.removeEventListener(AUTH_LOGIN_EVENT, callback);\n  },\n\n  // Listen for logout events\n  onLogout: (callback: () => void) => {\n    window.addEventListener(AUTH_LOGOUT_EVENT, callback);\n    return () => window.removeEventListener(AUTH_LOGOUT_EVENT, callback);\n  }\n};"
    },
    {
      "id": "10797c6a",
      "path": "src/vite-env.d.ts",
      "size": 38,
      "lastModified": "2025-03-23T23:18:28.962Z",
      "content": "/// <reference types=\"vite/client\" />\n"
    },
    {
      "id": "73975c30",
      "path": "public/vite.svg",
      "size": 1497,
      "lastModified": "2025-03-23T23:18:28.961Z",
      "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" aria-hidden=\"true\" role=\"img\" class=\"iconify iconify--logos\" width=\"31.88\" height=\"32\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 256 257\"><defs><linearGradient id=\"IconifyId1813088fe1fbc01fb466\" x1=\"-.828%\" x2=\"57.636%\" y1=\"7.652%\" y2=\"78.411%\"><stop offset=\"0%\" stop-color=\"#41D1FF\"></stop><stop offset=\"100%\" stop-color=\"#BD34FE\"></stop></linearGradient><linearGradient id=\"IconifyId1813088fe1fbc01fb467\" x1=\"43.376%\" x2=\"50.316%\" y1=\"2.242%\" y2=\"89.03%\"><stop offset=\"0%\" stop-color=\"#FFEA83\"></stop><stop offset=\"8.333%\" stop-color=\"#FFDD35\"></stop><stop offset=\"100%\" stop-color=\"#FFA800\"></stop></linearGradient></defs><path fill=\"url(#IconifyId1813088fe1fbc01fb466)\" d=\"M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z\"></path><path fill=\"url(#IconifyId1813088fe1fbc01fb467)\" d=\"M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z\"></path></svg>"
    }
  ]
}